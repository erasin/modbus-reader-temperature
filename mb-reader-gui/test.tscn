[gd_scene load_steps=2 format=3 uid="uid://dt61cmv8tn8sv"]

[sub_resource type="GDScript" id="GDScript_qx6cm"]
script/source = "extends Control

# 产品数量
const PRODUCT_COUNT = 30

# 产品列表
var products = []

# 引用 ProductItem 预制
@export var product_item_scene : PackedScene

func _ready():
	# 初始化产品列表
	for i in range(PRODUCT_COUNT):
		var product = {
			\"id\": i + 1,
			\"name\": \"Product \" + str(i + 1),
			\"price\": randf() * 100,
			\"image\": preload(\"res://ball.png\")  # 替换为实际图片路径
		}
		products.append(product)
	
	# 加载产品项到 GridContainer
	var product_grid = $VBoxContainer/ProductGrid
	for product in products:
		var product_item = product_item_scene.instantiate()
		product_item.get_node(\"VBoxContainer/Label1\").text = str(product.id)
		product_item.get_node(\"VBoxContainer/Label2\").text = product.name
		product_item.get_node(\"VBoxContainer/Label3\").text = \"$\" + str(product.price)
		product_item.get_node(\"VBoxContainer/TextureRect\").texture = product.image
		product_grid.add_child(product_item)
	
	# 连接定时器信号
	$VBoxContainer/Timer.timeout.connect(_on_Timer_timeout)

func _on_Timer_timeout():
	# 更新产品价格
	var product_grid = $VBoxContainer/ProductGrid
	for i in range(PRODUCT_COUNT):
		var product = products[i]
		product[\"price\"] = randf() * 100
		var product_item = product_grid.get_child(i)
		product_item.get_node(\"VBoxContainer/Label3\").text = \"$\" + str(product.price)
"

[node name="Test" type="Control"]
layout_mode = 3
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
script = SubResource("GDScript_qx6cm")

[node name="VBoxContainer" type="VBoxContainer" parent="."]
layout_mode = 1
offset_right = 40.0
offset_bottom = 40.0

[node name="GridContainer" type="GridContainer" parent="VBoxContainer"]
layout_mode = 2

[node name="Timer" type="Timer" parent="."]

[node name="Button" type="Button" parent="."]
layout_mode = 0
offset_right = 8.0
offset_bottom = 8.0
